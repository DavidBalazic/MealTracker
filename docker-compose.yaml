services:
  userservice:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AllowedOrigins__Frontend=http://frontend:3000
    env_file:
      - global.env
    networks:
      - foodtracker-network

  foodservice:
    build:
      context: ./FoodService
      dockerfile: Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AllowedOrigins__Frontend=http://frontend:3000
    env_file:
      - global.env
    networks:
      - foodtracker-network

  recipeservice:
    build:
      context: ./RecipeService
      dockerfile: Dockerfile
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AllowedOrigins__Frontend=http://frontend:3000
    env_file:
      - global.env
    networks:
      - foodtracker-network

  mealtrackerservice:
    build:
      context: ./MealTrackerService
      dockerfile: Dockerfile
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoSettings__DatabaseName=MealTrackerDatabase
      - AllowedOrigins__Frontend=http://frontend:3000
    env_file:
      - global.env
    networks:
      - foodtracker-network

  frontend:
    build:
      context: ./FoodTrackerClient/food_tracker
      dockerfile: Dockerfile
    ports:
      - "3000:80"
      - "80:80"
    environment:
      - MONGO_DATABASE_NAME=soa_db
    env_file: 
      - global.env
    networks:
      - foodtracker-network

networks:
  foodtracker-network:
    name: foodtracker-network

include:
  - ./MealSuggestionService/docker-compose.yaml