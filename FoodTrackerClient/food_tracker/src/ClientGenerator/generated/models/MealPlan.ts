/* tslint:disable */
/* eslint-disable */
/**
 * Meal Tracker API
 * API documentation for the Meal Tracker Service
 *
 * The version of the OpenAPI document: v1
 * Contact: your.email@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Meal } from './Meal';
import {
    MealFromJSON,
    MealFromJSONTyped,
    MealToJSON,
    MealToJSONTyped,
} from './Meal';

/**
 * 
 * @export
 * @interface MealPlan
 */
export interface MealPlan {
    /**
     * 
     * @type {string}
     * @memberof MealPlan
     */
    id?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof MealPlan
     */
    date?: Date;
    /**
     * 
     * @type {Array<Meal>}
     * @memberof MealPlan
     */
    meals?: Array<Meal> | null;
}

/**
 * Check if a given object implements the MealPlan interface.
 */
export function instanceOfMealPlan(value: object): value is MealPlan {
    return true;
}

export function MealPlanFromJSON(json: any): MealPlan {
    return MealPlanFromJSONTyped(json, false);
}

export function MealPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): MealPlan {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'meals': json['meals'] == null ? undefined : ((json['meals'] as Array<any>).map(MealFromJSON)),
    };
}

export function MealPlanToJSON(json: any): MealPlan {
    return MealPlanToJSONTyped(json, false);
}

export function MealPlanToJSONTyped(value?: MealPlan | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString()),
        'meals': value['meals'] == null ? undefined : ((value['meals'] as Array<any>).map(MealToJSON)),
    };
}

