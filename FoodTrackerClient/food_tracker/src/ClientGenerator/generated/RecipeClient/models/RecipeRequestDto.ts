/* tslint:disable */
/* eslint-disable */
/**
 * Recipes API
 * API za upravljanje s podatki o receptih.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Ingredient } from './Ingredient';
import {
    IngredientFromJSON,
    IngredientFromJSONTyped,
    IngredientToJSON,
    IngredientToJSONTyped,
} from './Ingredient';

/**
 * 
 * @export
 * @interface RecipeRequestDto
 */
export interface RecipeRequestDto {
    /**
     * 
     * @type {string}
     * @memberof RecipeRequestDto
     */
    name?: string | null;
    /**
     * 
     * @type {Array<Ingredient>}
     * @memberof RecipeRequestDto
     */
    ingredients?: Array<Ingredient> | null;
    /**
     * 
     * @type {number}
     * @memberof RecipeRequestDto
     */
    servings?: number;
    /**
     * 
     * @type {string}
     * @memberof RecipeRequestDto
     */
    instructions?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecipeRequestDto
     */
    tags?: Array<string> | null;
}

/**
 * Check if a given object implements the RecipeRequestDto interface.
 */
export function instanceOfRecipeRequestDto(value: object): value is RecipeRequestDto {
    return true;
}

export function RecipeRequestDtoFromJSON(json: any): RecipeRequestDto {
    return RecipeRequestDtoFromJSONTyped(json, false);
}

export function RecipeRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['Name'] == null ? undefined : json['Name'],
        'ingredients': json['Ingredients'] == null ? undefined : ((json['Ingredients'] as Array<any>).map(IngredientFromJSON)),
        'servings': json['Servings'] == null ? undefined : json['Servings'],
        'instructions': json['Instructions'] == null ? undefined : json['Instructions'],
        'tags': json['Tags'] == null ? undefined : json['Tags'],
    };
}

export function RecipeRequestDtoToJSON(json: any): RecipeRequestDto {
    return RecipeRequestDtoToJSONTyped(json, false);
}

export function RecipeRequestDtoToJSONTyped(value?: RecipeRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Name': value['name'],
        'Ingredients': value['ingredients'] == null ? undefined : ((value['ingredients'] as Array<any>).map(IngredientToJSON)),
        'Servings': value['servings'],
        'Instructions': value['instructions'],
        'Tags': value['tags'],
    };
}

