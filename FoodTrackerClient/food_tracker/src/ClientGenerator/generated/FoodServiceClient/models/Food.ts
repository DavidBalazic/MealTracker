/* tslint:disable */
/* eslint-disable */
/**
 * FoodService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Food
 */
export interface Food {
    /**
     * 
     * @type {string}
     * @memberof Food
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Food
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Food
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof Food
     */
    protein?: number;
    /**
     * 
     * @type {number}
     * @memberof Food
     */
    carbohydrates?: number;
    /**
     * 
     * @type {number}
     * @memberof Food
     */
    fat?: number;
    /**
     * 
     * @type {string}
     * @memberof Food
     */
    servingSize?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Food
     */
    unit?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Food
     */
    allergens?: Array<string> | null;
}

/**
 * Check if a given object implements the Food interface.
 */
export function instanceOfFood(value: object): value is Food {
    return true;
}

export function FoodFromJSON(json: any): Food {
    return FoodFromJSONTyped(json, false);
}

export function FoodFromJSONTyped(json: any, ignoreDiscriminator: boolean): Food {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'calories': json['Calories'] == null ? undefined : json['Calories'],
        'protein': json['Protein'] == null ? undefined : json['Protein'],
        'carbohydrates': json['Carbohydrates'] == null ? undefined : json['Carbohydrates'],
        'fat': json['Fat'] == null ? undefined : json['Fat'],
        'servingSize': json['ServingSize'] == null ? undefined : json['ServingSize'],
        'unit': json['Unit'] == null ? undefined : json['Unit'],
        'allergens': json['Allergens'] == null ? undefined : json['Allergens'],
    };
}

export function FoodToJSON(json: any): Food {
    return FoodToJSONTyped(json, false);
}

export function FoodToJSONTyped(value?: Food | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Id': value['id'],
        'Name': value['name'],
        'Calories': value['calories'],
        'Protein': value['protein'],
        'Carbohydrates': value['carbohydrates'],
        'Fat': value['fat'],
        'ServingSize': value['servingSize'],
        'Unit': value['unit'],
        'Allergens': value['allergens'],
    };
}

